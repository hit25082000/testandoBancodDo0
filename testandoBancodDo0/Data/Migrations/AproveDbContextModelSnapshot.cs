// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using testandoBancodDo0.Context;

#nullable disable

namespace testandoBancodDo0.Migrations
{
    [DbContext(typeof(AproveDbContext))]
    partial class AproveDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FavoritoReceita", b =>
                {
                    b.Property<int>("FavoritosId")
                        .HasColumnType("integer");

                    b.Property<int>("ReceitasId")
                        .HasColumnType("integer");

                    b.HasKey("FavoritosId", "ReceitasId");

                    b.HasIndex("ReceitasId");

                    b.ToTable("FavoritoReceita");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.CadastroReceitaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModoPreparo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("cad_receitas");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.IngredientesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Quantidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tab_ingredientes");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdIngredientes")
                        .HasColumnType("integer");

                    b.Property<int>("IdSugestao")
                        .HasColumnType("integer");

                    b.Property<string>("ModoPreparo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdIngredientes");

                    b.HasIndex("IdSugestao");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.SugestaoReceitaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModoPreparo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tab_sugestaoRec");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.UsuarioModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("FavoritoReceita", b =>
                {
                    b.HasOne("testandoBancodDo0.Models.Favorito", null)
                        .WithMany()
                        .HasForeignKey("FavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testandoBancodDo0.Models.Receita", null)
                        .WithMany()
                        .HasForeignKey("ReceitasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("testandoBancodDo0.Models.Receita", b =>
                {
                    b.HasOne("testandoBancodDo0.Models.IngredientesModel", "Ingredientes")
                        .WithMany()
                        .HasForeignKey("IdIngredientes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testandoBancodDo0.Models.SugestaoReceitaModel", "SugestaoReceita")
                        .WithMany()
                        .HasForeignKey("IdSugestao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredientes");

                    b.Navigation("SugestaoReceita");
                });

            modelBuilder.Entity("testandoBancodDo0.Models.SugestaoReceitaModel", b =>
                {
                    b.HasOne("testandoBancodDo0.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
